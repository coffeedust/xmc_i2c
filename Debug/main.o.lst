   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_I2C_CH_ClearStatusFlag,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_I2C_CH_ClearStatusFlag:
  25              	.LFB256:
  26              	 .file 1 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2020-12-05
   4:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
   7:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.
  11:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  12:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  14:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * do so, all subject to the following:
  20:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  21:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * a source language processor.
  27:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  28:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * at XMCSupport@infineon.com.
  39:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
  40:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  41:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  42:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  43:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  44:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  45:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  46:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  47:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  48:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  49:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  50:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  51:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  52:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  53:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  54:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  55:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  56:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  57:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  58:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  59:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  60:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  61:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  62:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  63:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  64:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  65:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  66:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  68:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  69:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  70:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  71:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  72:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  73:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  74:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  75:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  76:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  77:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  78:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  79:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  80:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  81:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-05-07:
  82:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added normal_divider_mode to XMC_I2C_CH_CONFIG_t configuration structure.
  83:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  84:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetBaudrateEx()
  85:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  86:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-12-10:
  87:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetHoldDelay()
  88:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  89:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2020-12-05:
  90:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *    - Added XMC_I2C_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  91:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  92:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond
  93:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  94:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  95:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
  96:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  97:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  98:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
  99:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
 101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
 104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
 107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
 112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family.
 113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   bool normal_divider_mode; /**< Selects normal divider mode for baudrate generator instead of defa
 275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address
 276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config, bool 
 306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const
 324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_InitEx(channel, config, true);
 326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
 327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
 381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint8_t service_request)
 418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
 421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****     const XMC_I2C_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint32_t service_request)
 445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****                                       (uint32_t)service_request);
 448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
 449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
 469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
 491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   return ((uint8_t)((channel->RBUF) >> 8U));
 677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
 678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
 717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
 719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** 
 720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** {
  27              	 .loc 1 732 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
 733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
  44              	 .loc 1 733 0
  45 000a 7B68     	 ldr r3,[r7,#4]
  46 000c DA6C     	 ldr r2,[r3,#76]
  47 000e 3B68     	 ldr r3,[r7]
  48 0010 1A43     	 orrs r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 DA64     	 str r2,[r3,#76]
 734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc\xmc_i2c.h **** }
  51              	 .loc 1 734 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE256:
  67              	 .section .text.I2C_MASTER_SendStop,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	I2C_MASTER_SendStop:
  73              	.LFB279:
  74              	 .file 2 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER/i2c_master.h"
   1:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
   2:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @file i2c_master.h
   3:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @date 2021-01-08
   4:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
   5:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * NOTE:
   6:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * regenerated.
   8:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
   9:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
  10:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @cond
  11:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  12:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER v4.1.34 Configures USIC channel to transmit & receive data using I2C protocol.
  13:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  14:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  15:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * All rights reserved.
  16:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  17:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following conditions are met:
  19:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  20:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * disclaimer.
  22:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  23:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  26:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  29:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  37:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  40:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  41:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Change History
  42:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * --------------
  43:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  44:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-02-16:
  45:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Initial version<br>
  46:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  47:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-06-10:
  48:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  50:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-08-31:
  51:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - DMA support APIs added
  52:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-10-20:
  53:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Code snippets updated
  54:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2016-08-18:
  55:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-11-17:
  57:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added tx_irqn and rx_irqn to I2C_MASTER_CONFIG_t
  58:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-12-20:
  59:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_FlushTxFifo(), I2C_MASTER_FlushRxFifo(), I2C_MASTER_DisableOutputs(), I2C
  60:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  61:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2019-16-09:
  62:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_START_TRANSMIT_RETRIES to control the wait to see the START symbol in the
  63:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_STATUS_BUS_ERROR as possible return value from I2C_MASTER_StartTransmitIR
  64:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  65:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2021-01-08:
  66:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Modified check for minimum XMCLib version
  67:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  68:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcond
  69:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  70:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
  71:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  72:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_H
  73:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_H
  74:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  75:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  76:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  77:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  78:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * HEADER FILES
  79:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  80:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "xmc_gpio.h"
  81:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "xmc_i2c.h"
  82:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "i2c_master_conf.h"
  83:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  84:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if(UC_FAMILY == XMC4)
  85:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  86:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  87:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  88:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  89:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  90:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "DAVE_Common.h"
  91:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  92:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  93:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  94:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  95:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  96:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * MACROS
  97:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  98:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_MAJOR_VERSION 2
  99:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_MINOR_VERSION 0
 100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_PATCH_VERSION 0
 101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if !((XMC_LIB_MAJOR_VERSION > I2C_MASTER_XMC_LIB_MAJOR_VERSION) ||\
 103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****       ((XMC_LIB_MAJOR_VERSION == I2C_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > I2C_
 104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****       ((XMC_LIB_MAJOR_VERSION == I2C_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == I2C
 105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
 106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_START_TRANSMIT_RETRIES
 109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_START_TRANSMIT_RETRIES (0x7fff)
 110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * ENUMS
 114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
 117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Initialization status.
 121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_STATUS
 123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U,  /*!< I2C_MASTER UNSUPPORTED MODE */
 128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUS_ERROR = 4U          /*!< I2C_MASTER BUS_ERROR */
 129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_STATUS_t;
 130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Direction
 133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** * DATA STRUCTURES
 154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** ***************************************************************************************************
 155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure for DMA configuration.
 162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data transmission.*/
 180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data reception.*/
 184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_enable_io;      /*!< Function pointer to enable SDA/SCL outpu
 187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_disable_io;     /*!< Function pointer to disable SDA/SCL outp
 188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the transmission is complete
 191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the reception is complete*/
 193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when nack is received*/
 195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when arbitration lost is occured*
 197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when error is detected.*/
 199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type tx_irqn;
 208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type rx_irqn; 
 209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_CONFIG_t;
 210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER
 241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****    	                                               that can change at runtime*/
 246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_t;
 247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifdef __cplusplus
 253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** extern "C" {
 254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * API PROTOTYPES
 264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function can be used to check application software compatibility with a
 271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * specific version of the APP.
 272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_Init();
 280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(version.major != 4U)
 282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
 295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * FIFO configuration etc are done in this API.
 299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function.
 301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * #include "DAVE.h"
 306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * int main(void)
 307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * {
 308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   // Initializing the modules and the multiplexer
 309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {}
 312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer to receive data.
 327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).\n
 337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
 344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
 355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
 356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Read data from IO EXPANDER
 372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   { }
 380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  return 0;
 381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits data to I2C slave device.
 391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer containing the data to transmit.
 396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write). \n
 406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
 408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get the I2C flag status.
 450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t Flag status.
 457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Clear the I2C flag status.
 490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None <BR>
 497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * user can start a new transmission without delay.
 535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
 559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** * @brief Stops the active data reception request.
 572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * a new receive request.
 580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t rx_buf[25];
 591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t tx_buf[2];
 592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;
 593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address from which data to be transfered
 597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     tx_buf[0] = 0;
 598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
 609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
 613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U) || defined(DOXYGEN)
 622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  block_size size of the block
 627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr    address\n
 628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure to store the status of transmission.
 641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens through DMA channel.
 643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the completion of data transmission.
 648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * calls to this API.
 650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // trigger the DMA
 685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U) || defined(DOXYGEN)
 704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param block_size  size of the block
 710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr  address \n
 711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed.
 720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * are received.
 725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 735:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 736:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 737:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 738:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 739:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Pre condition:
 740:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 741:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 742:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t ReadData[256];
 743:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 744:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 745:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 746:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 747:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 748:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 749:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 750:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 751:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 752:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 753:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 754:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 755:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 756:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 757:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 758:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 759:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 760:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 761:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 762:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 763:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 764:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 765:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 766:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 767:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 768:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 769:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  
 770:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 771:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 772:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 773:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 774:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 775:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 776:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 777:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 778:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 779:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 780:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 781:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 782:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  @endcode
 783:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 784:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 785:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 786:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 787:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 788:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 789:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 790:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 791:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 792:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 793:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 794:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 795:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 796:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size    number of bytes
 797:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 798:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 799:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 800:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 801:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 802:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 803:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 804:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 805:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 806:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 807:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 808:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 809:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 810:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 811:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 812:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 813:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * in progress.
 814:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 815:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 816:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 817:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 818:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 819:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 820:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 821:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 822:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 823:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 824:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 825:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 826:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 827:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 828:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 829:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 830:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 831:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 832:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 833:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 834:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 835:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 836:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 837:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 838:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 839:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 840:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 841:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 842:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 843:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 844:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 845:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 846:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 847:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 848:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 849:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 850:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 851:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 852:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 853:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 854:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 855:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 856:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 857:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 858:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 859:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 860:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 861:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 862:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 863:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 864:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 865:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 866:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 867:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 868:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 869:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 870:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 871:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 872:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count    number of bytes
 873:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 874:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 875:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 876:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 877:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 878:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 879:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 880:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 881:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 882:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 883:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 884:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 885:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 886:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 887:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 888:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 889:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 890:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 891:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 892:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 893:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 894:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 895:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 896:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 897:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 898:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 899:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 900:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 901:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 902:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_buffer[64];
 903:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 904:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 905:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 906:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 907:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 908:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 909:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 910:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 911:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 912:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 913:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 914:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 915:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 916:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 917:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 918:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 919:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 920:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 921:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 922:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 923:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 924:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 925:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 926:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 927:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 928:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 929:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 930:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 931:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 932:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 933:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 934:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 935:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 936:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 937:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 938:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      their bit positions.\n
 939:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 940:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 941:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 942:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 943:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * buffer error flag before providing the value.
 944:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 945:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 946:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 947:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 948:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 949:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 950:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 951:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 952:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 953:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 954:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 955:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 956:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 957:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 958:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 959:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 960:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 961:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 962:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 963:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 964:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 965:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 966:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 967:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 968:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 969:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 970:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 971:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 972:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 973:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 974:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 975:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 976:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 977:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 978:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 979:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 980:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 981:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 982:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 983:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 984:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL));
 985:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 986:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 987:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 988:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 989:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 990:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 991:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 992:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
 993:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 994:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 995:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 996:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 997:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 998:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
 999:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1000:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1001:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
1002:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
1003:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * below the trigger limit.
1004:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1005:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1006:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1007:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1008:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1009:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1010:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1011:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
1012:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1013:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1014:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1015:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1016:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1017:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1018:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1019:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
1020:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1021:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
1022:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
1023:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1024:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1025:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1026:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1027:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1028:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1029:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1030:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1031:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1032:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1033:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1034:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1035:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1036:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1037:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1038:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1039:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1040:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL));
1041:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1042:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1043:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1044:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1045:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1046:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1047:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
1048:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1049:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1050:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1051:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1052:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1053:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1054:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1055:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1056:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1057:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1058:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * above the trigger limit.
1059:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1060:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1061:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1062:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1063:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1064:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1065:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1066:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1067:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Rx_Data[256];
1068:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1069:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1070:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1071:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1072:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1073:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1074:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1075:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1076:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1077:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1078:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1079:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1080:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1081:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1082:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1083:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1084:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1085:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1086:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1087:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1088:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1089:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1090:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1091:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1092:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1093:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1094:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1095:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1096:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL));
1097:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1098:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1099:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * data to the transmit FIFO.
1111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Wait when Tx FIFO is full
1136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(1U)
1141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
1144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL));
1149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
1150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
1207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL));
1215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
1216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * comparison using \a OR operation.
1228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * event.
1232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interest before checking the status.
1234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t mem_address[2];
1241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   int main(void)
1242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     DAVE_STATUS_t init_status;
1244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     init_status = DAVE_Init();
1246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     else
1260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      return 1U;
1267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL));
1274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * transmit FIFO.
1280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \a OR operation.
1286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * appropriately masked.
1293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL));
1333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the function.
1353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL));
1393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Provides the received data from receive buffer.
1398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[10];
1415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        // wait for ACK
1437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         index++;
1443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL));
1466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
1467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  byte data byte to transmit. \n
1474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
1476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL));
1519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
1520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * may not yield expected result.
1535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL));
1566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
1567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL));
1611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
1612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the ACK from slave
1616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL));
1681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
1682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the NACK from slave
1685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // only for the last byte
1730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1735:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1736:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1737:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1738:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1739:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1740:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1741:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1742:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1743:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1744:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1745:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1746:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1747:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1748:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1749:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1750:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL));
1751:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
1752:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1753:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1754:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends stop command to slave
1755:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1756:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1757:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1758:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1759:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1760:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1761:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1762:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1763:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1764:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1765:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1766:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1767:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1768:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1769:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1770:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1771:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1772:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1773:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1774:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1775:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1776:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1777:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1778:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1779:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1780:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1781:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1782:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1783:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1784:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1785:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1786:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1787:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1788:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1789:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1790:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1791:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1792:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1793:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1794:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1795:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1796:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1797:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1798:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1799:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1800:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** {
  75              	 .loc 2 1800 0
  76              	 .cfi_startproc
  77              	 
  78              	 
  79 0000 80B5     	 push {r7,lr}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 8
  82              	 .cfi_offset 7,-8
  83              	 .cfi_offset 14,-4
  84 0002 82B0     	 sub sp,sp,#8
  85              	.LCFI7:
  86              	 .cfi_def_cfa_offset 16
  87 0004 00AF     	 add r7,sp,#0
  88              	.LCFI8:
  89              	 .cfi_def_cfa_register 7
  90 0006 7860     	 str r0,[r7,#4]
1801:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL));
1802:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED);
  91              	 .loc 2 1802 0
  92 0008 7B68     	 ldr r3,[r7,#4]
  93 000a 1B68     	 ldr r3,[r3]
  94 000c 1846     	 mov r0,r3
  95 000e 1021     	 movs r1,#16
  96 0010 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
1803:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
  97              	 .loc 2 1803 0
  98 0014 7B68     	 ldr r3,[r7,#4]
  99 0016 1B68     	 ldr r3,[r3]
 100 0018 1846     	 mov r0,r3
 101 001a FFF7FEFF 	 bl XMC_I2C_CH_MasterStop
1804:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 102              	 .loc 2 1804 0
 103 001e 0837     	 adds r7,r7,#8
 104              	.LCFI9:
 105              	 .cfi_def_cfa_offset 8
 106 0020 BD46     	 mov sp,r7
 107              	.LCFI10:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 0022 80BD     	 pop {r7,pc}
 111              	 .cfi_endproc
 112              	.LFE279:
 114              	 .section .text._write,"ax",%progbits
 115              	 .align 2
 116              	 .global _write
 117              	 .thumb
 118              	 .thumb_func
 120              	_write:
 121              	.LFB327:
 122              	 .file 3 "../main.c"
   1:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   2:../main.c     **** #include <stdio.h>
   3:../main.c     **** #include <stdbool.h>
   4:../main.c     **** 
   5:../main.c     **** int _write(int file, char *p, int len) {
 123              	 .loc 3 5 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127 0000 80B5     	 push {r7,lr}
 128              	.LCFI11:
 129              	 .cfi_def_cfa_offset 8
 130              	 .cfi_offset 7,-8
 131              	 .cfi_offset 14,-4
 132 0002 84B0     	 sub sp,sp,#16
 133              	.LCFI12:
 134              	 .cfi_def_cfa_offset 24
 135 0004 00AF     	 add r7,sp,#0
 136              	.LCFI13:
 137              	 .cfi_def_cfa_register 7
 138 0006 F860     	 str r0,[r7,#12]
 139 0008 B960     	 str r1,[r7,#8]
 140 000a 7A60     	 str r2,[r7,#4]
   6:../main.c     **** 	UART_Transmit(&UART_0, *p, len);
 141              	 .loc 3 6 0
 142 000c BB68     	 ldr r3,[r7,#8]
 143 000e 1B78     	 ldrb r3,[r3]
 144 0010 1A46     	 mov r2,r3
 145 0012 7B68     	 ldr r3,[r7,#4]
 146 0014 0448     	 ldr r0,.L5
 147 0016 1146     	 mov r1,r2
 148 0018 1A46     	 mov r2,r3
 149 001a FFF7FEFF 	 bl UART_Transmit
   7:../main.c     **** 	return len;
 150              	 .loc 3 7 0
 151 001e 7B68     	 ldr r3,[r7,#4]
   8:../main.c     **** }
 152              	 .loc 3 8 0
 153 0020 1846     	 mov r0,r3
 154 0022 1037     	 adds r7,r7,#16
 155              	.LCFI14:
 156              	 .cfi_def_cfa_offset 8
 157 0024 BD46     	 mov sp,r7
 158              	.LCFI15:
 159              	 .cfi_def_cfa_register 13
 160              	 
 161 0026 80BD     	 pop {r7,pc}
 162              	.L6:
 163              	 .align 2
 164              	.L5:
 165 0028 00000000 	 .word UART_0
 166              	 .cfi_endproc
 167              	.LFE327:
 169              	 .global timerI2c
 170              	 .section .bss.timerI2c,"aw",%nobits
 171              	 .align 2
 174              	timerI2c:
 175 0000 00000000 	 .space 4
 176              	 .global I2cTxCompletion
 177              	 .section .bss.I2cTxCompletion,"aw",%nobits
 180              	I2cTxCompletion:
 181 0000 00       	 .space 1
 182              	 .global I2cRxCompletion
 183              	 .section .bss.I2cRxCompletion,"aw",%nobits
 186              	I2cRxCompletion:
 187 0000 00       	 .space 1
 188              	 .global bI2cNack
 189              	 .section .bss.bI2cNack,"aw",%nobits
 192              	bI2cNack:
 193 0000 00       	 .space 1
 194              	 .global bI2cTimeout
 195              	 .section .bss.bI2cTimeout,"aw",%nobits
 198              	bI2cTimeout:
 199 0000 00       	 .space 1
 200              	 .section .text.callbackI2cTimeout,"ax",%progbits
 201              	 .align 2
 202              	 .global callbackI2cTimeout
 203              	 .thumb
 204              	 .thumb_func
 206              	callbackI2cTimeout:
 207              	.LFB328:
   9:../main.c     **** 
  10:../main.c     **** uint32_t timerI2c = 0;
  11:../main.c     **** volatile uint8_t I2cTxCompletion = 0;
  12:../main.c     **** volatile uint8_t I2cRxCompletion = 0;
  13:../main.c     **** volatile bool bI2cNack = false;
  14:../main.c     **** volatile bool bI2cTimeout = false;
  15:../main.c     **** 
  16:../main.c     **** void callbackI2cTimeout(void *args) {
 208              	 .loc 3 16 0
 209              	 .cfi_startproc
 210              	 
 211              	 
 212 0000 80B5     	 push {r7,lr}
 213              	.LCFI16:
 214              	 .cfi_def_cfa_offset 8
 215              	 .cfi_offset 7,-8
 216              	 .cfi_offset 14,-4
 217 0002 82B0     	 sub sp,sp,#8
 218              	.LCFI17:
 219              	 .cfi_def_cfa_offset 16
 220 0004 00AF     	 add r7,sp,#0
 221              	.LCFI18:
 222              	 .cfi_def_cfa_register 7
 223 0006 7860     	 str r0,[r7,#4]
  17:../main.c     **** 	bI2cTimeout = true;
 224              	 .loc 3 17 0
 225 0008 074B     	 ldr r3,.L8
 226 000a 0122     	 movs r2,#1
 227 000c 1A70     	 strb r2,[r3]
  18:../main.c     **** 
  19:../main.c     **** 	I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 228              	 .loc 3 19 0
 229 000e 0748     	 ldr r0,.L8+4
 230 0010 FFF7FEFF 	 bl I2C_MASTER_AbortTransmit
  20:../main.c     **** 	I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 231              	 .loc 3 20 0
 232 0014 0548     	 ldr r0,.L8+4
 233 0016 FFF7FEFF 	 bl I2C_MASTER_AbortReceive
  21:../main.c     **** 	I2C_MASTER_Init(&I2C_MASTER_0);
 234              	 .loc 3 21 0
 235 001a 0448     	 ldr r0,.L8+4
 236 001c FFF7FEFF 	 bl I2C_MASTER_Init
  22:../main.c     **** }
 237              	 .loc 3 22 0
 238 0020 0837     	 adds r7,r7,#8
 239              	.LCFI19:
 240              	 .cfi_def_cfa_offset 8
 241 0022 BD46     	 mov sp,r7
 242              	.LCFI20:
 243              	 .cfi_def_cfa_register 13
 244              	 
 245 0024 80BD     	 pop {r7,pc}
 246              	.L9:
 247 0026 00BF     	 .align 2
 248              	.L8:
 249 0028 00000000 	 .word bI2cTimeout
 250 002c 00000000 	 .word I2C_MASTER_0
 251              	 .cfi_endproc
 252              	.LFE328:
 254              	 .section .text.enableCallbackI2cTimeout,"ax",%progbits
 255              	 .align 2
 256              	 .global enableCallbackI2cTimeout
 257              	 .thumb
 258              	 .thumb_func
 260              	enableCallbackI2cTimeout:
 261              	.LFB329:
  23:../main.c     **** 
  24:../main.c     **** void enableCallbackI2cTimeout(bool enable) {
 262              	 .loc 3 24 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266 0000 80B5     	 push {r7,lr}
 267              	.LCFI21:
 268              	 .cfi_def_cfa_offset 8
 269              	 .cfi_offset 7,-8
 270              	 .cfi_offset 14,-4
 271 0002 82B0     	 sub sp,sp,#8
 272              	.LCFI22:
 273              	 .cfi_def_cfa_offset 16
 274 0004 00AF     	 add r7,sp,#0
 275              	.LCFI23:
 276              	 .cfi_def_cfa_register 7
 277 0006 0346     	 mov r3,r0
 278 0008 FB71     	 strb r3,[r7,#7]
  25:../main.c     **** 	if(enable) {
 279              	 .loc 3 25 0
 280 000a FB79     	 ldrb r3,[r7,#7]
 281 000c 002B     	 cmp r3,#0
 282 000e 05D0     	 beq .L11
  26:../main.c     **** 		SYSTIMER_StartTimer(timerI2c);
 283              	 .loc 3 26 0
 284 0010 064B     	 ldr r3,.L13
 285 0012 1B68     	 ldr r3,[r3]
 286 0014 1846     	 mov r0,r3
 287 0016 FFF7FEFF 	 bl SYSTIMER_StartTimer
 288 001a 04E0     	 b .L10
 289              	.L11:
  27:../main.c     **** 	}
  28:../main.c     **** 	else {
  29:../main.c     **** 		SYSTIMER_StopTimer(timerI2c);
 290              	 .loc 3 29 0
 291 001c 034B     	 ldr r3,.L13
 292 001e 1B68     	 ldr r3,[r3]
 293 0020 1846     	 mov r0,r3
 294 0022 FFF7FEFF 	 bl SYSTIMER_StopTimer
 295              	.L10:
  30:../main.c     **** 	}
  31:../main.c     **** }
 296              	 .loc 3 31 0
 297 0026 0837     	 adds r7,r7,#8
 298              	.LCFI24:
 299              	 .cfi_def_cfa_offset 8
 300 0028 BD46     	 mov sp,r7
 301              	.LCFI25:
 302              	 .cfi_def_cfa_register 13
 303              	 
 304 002a 80BD     	 pop {r7,pc}
 305              	.L14:
 306              	 .align 2
 307              	.L13:
 308 002c 00000000 	 .word timerI2c
 309              	 .cfi_endproc
 310              	.LFE329:
 312              	 .section .text.callbackI2cTx,"ax",%progbits
 313              	 .align 2
 314              	 .global callbackI2cTx
 315              	 .thumb
 316              	 .thumb_func
 318              	callbackI2cTx:
 319              	.LFB330:
  32:../main.c     **** 
  33:../main.c     **** void callbackI2cTx(void) {
 320              	 .loc 3 33 0
 321              	 .cfi_startproc
 322              	 
 323              	 
 324              	 
 325 0000 80B4     	 push {r7}
 326              	.LCFI26:
 327              	 .cfi_def_cfa_offset 4
 328              	 .cfi_offset 7,-4
 329 0002 00AF     	 add r7,sp,#0
 330              	.LCFI27:
 331              	 .cfi_def_cfa_register 7
  34:../main.c     **** 	I2cTxCompletion = 1;
 332              	 .loc 3 34 0
 333 0004 034B     	 ldr r3,.L16
 334 0006 0122     	 movs r2,#1
 335 0008 1A70     	 strb r2,[r3]
  35:../main.c     **** }
 336              	 .loc 3 35 0
 337 000a BD46     	 mov sp,r7
 338              	.LCFI28:
 339              	 .cfi_def_cfa_register 13
 340              	 
 341 000c 5DF8047B 	 ldr r7,[sp],#4
 342              	.LCFI29:
 343              	 .cfi_restore 7
 344              	 .cfi_def_cfa_offset 0
 345 0010 7047     	 bx lr
 346              	.L17:
 347 0012 00BF     	 .align 2
 348              	.L16:
 349 0014 00000000 	 .word I2cTxCompletion
 350              	 .cfi_endproc
 351              	.LFE330:
 353              	 .section .text.callbackI2cRx,"ax",%progbits
 354              	 .align 2
 355              	 .global callbackI2cRx
 356              	 .thumb
 357              	 .thumb_func
 359              	callbackI2cRx:
 360              	.LFB331:
  36:../main.c     **** 
  37:../main.c     **** void callbackI2cRx(void) {
 361              	 .loc 3 37 0
 362              	 .cfi_startproc
 363              	 
 364              	 
 365              	 
 366 0000 80B4     	 push {r7}
 367              	.LCFI30:
 368              	 .cfi_def_cfa_offset 4
 369              	 .cfi_offset 7,-4
 370 0002 00AF     	 add r7,sp,#0
 371              	.LCFI31:
 372              	 .cfi_def_cfa_register 7
  38:../main.c     **** 	I2cRxCompletion = 1;
 373              	 .loc 3 38 0
 374 0004 034B     	 ldr r3,.L19
 375 0006 0122     	 movs r2,#1
 376 0008 1A70     	 strb r2,[r3]
  39:../main.c     **** }
 377              	 .loc 3 39 0
 378 000a BD46     	 mov sp,r7
 379              	.LCFI32:
 380              	 .cfi_def_cfa_register 13
 381              	 
 382 000c 5DF8047B 	 ldr r7,[sp],#4
 383              	.LCFI33:
 384              	 .cfi_restore 7
 385              	 .cfi_def_cfa_offset 0
 386 0010 7047     	 bx lr
 387              	.L20:
 388 0012 00BF     	 .align 2
 389              	.L19:
 390 0014 00000000 	 .word I2cRxCompletion
 391              	 .cfi_endproc
 392              	.LFE331:
 394              	 .section .text.I2C_NACK_IRQ_Handler,"ax",%progbits
 395              	 .align 2
 396              	 .global I2C_NACK_IRQ_Handler
 397              	 .thumb
 398              	 .thumb_func
 400              	I2C_NACK_IRQ_Handler:
 401              	.LFB332:
  40:../main.c     **** 
  41:../main.c     **** void I2C_NACK_IRQ_Handler(void) {
 402              	 .loc 3 41 0
 403              	 .cfi_startproc
 404              	 
 405              	 
 406 0000 80B5     	 push {r7,lr}
 407              	.LCFI34:
 408              	 .cfi_def_cfa_offset 8
 409              	 .cfi_offset 7,-8
 410              	 .cfi_offset 14,-4
 411 0002 00AF     	 add r7,sp,#0
 412              	.LCFI35:
 413              	 .cfi_def_cfa_register 7
  42:../main.c     **** 	bI2cNack = 1;
 414              	 .loc 3 42 0
 415 0004 064B     	 ldr r3,.L22
 416 0006 0122     	 movs r2,#1
 417 0008 1A70     	 strb r2,[r3]
  43:../main.c     **** 	I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 418              	 .loc 3 43 0
 419 000a 0648     	 ldr r0,.L22+4
 420 000c FFF7FEFF 	 bl I2C_MASTER_AbortTransmit
  44:../main.c     **** 	I2C_MASTER_SendStop(&I2C_MASTER_0);
 421              	 .loc 3 44 0
 422 0010 0448     	 ldr r0,.L22+4
 423 0012 FFF7FEFF 	 bl I2C_MASTER_SendStop
  45:../main.c     **** 	I2C_MASTER_Init(&I2C_MASTER_0);
 424              	 .loc 3 45 0
 425 0016 0348     	 ldr r0,.L22+4
 426 0018 FFF7FEFF 	 bl I2C_MASTER_Init
  46:../main.c     **** }
 427              	 .loc 3 46 0
 428 001c 80BD     	 pop {r7,pc}
 429              	.L23:
 430 001e 00BF     	 .align 2
 431              	.L22:
 432 0020 00000000 	 .word bI2cNack
 433 0024 00000000 	 .word I2C_MASTER_0
 434              	 .cfi_endproc
 435              	.LFE332:
 437              	 .section .text.I2C_ARB_Lost_IRQ_Handler,"ax",%progbits
 438              	 .align 2
 439              	 .global I2C_ARB_Lost_IRQ_Handler
 440              	 .thumb
 441              	 .thumb_func
 443              	I2C_ARB_Lost_IRQ_Handler:
 444              	.LFB333:
  47:../main.c     **** 
  48:../main.c     **** void I2C_ARB_Lost_IRQ_Handler(void) {
 445              	 .loc 3 48 0
 446              	 .cfi_startproc
 447              	 
 448              	 
 449              	 
 450 0000 80B4     	 push {r7}
 451              	.LCFI36:
 452              	 .cfi_def_cfa_offset 4
 453              	 .cfi_offset 7,-4
 454 0002 00AF     	 add r7,sp,#0
 455              	.LCFI37:
 456              	 .cfi_def_cfa_register 7
  49:../main.c     **** 	bI2cNack = 1;
 457              	 .loc 3 49 0
 458 0004 034B     	 ldr r3,.L25
 459 0006 0122     	 movs r2,#1
 460 0008 1A70     	 strb r2,[r3]
  50:../main.c     **** }
 461              	 .loc 3 50 0
 462 000a BD46     	 mov sp,r7
 463              	.LCFI38:
 464              	 .cfi_def_cfa_register 13
 465              	 
 466 000c 5DF8047B 	 ldr r7,[sp],#4
 467              	.LCFI39:
 468              	 .cfi_restore 7
 469              	 .cfi_def_cfa_offset 0
 470 0010 7047     	 bx lr
 471              	.L26:
 472 0012 00BF     	 .align 2
 473              	.L25:
 474 0014 00000000 	 .word bI2cNack
 475              	 .cfi_endproc
 476              	.LFE333:
 478              	 .section .text.I2C_ERR_IRQ_Handler,"ax",%progbits
 479              	 .align 2
 480              	 .global I2C_ERR_IRQ_Handler
 481              	 .thumb
 482              	 .thumb_func
 484              	I2C_ERR_IRQ_Handler:
 485              	.LFB334:
  51:../main.c     **** 
  52:../main.c     **** void I2C_ERR_IRQ_Handler(void) {
 486              	 .loc 3 52 0
 487              	 .cfi_startproc
 488              	 
 489              	 
 490              	 
 491 0000 80B4     	 push {r7}
 492              	.LCFI40:
 493              	 .cfi_def_cfa_offset 4
 494              	 .cfi_offset 7,-4
 495 0002 00AF     	 add r7,sp,#0
 496              	.LCFI41:
 497              	 .cfi_def_cfa_register 7
  53:../main.c     **** 	bI2cNack = 1;
 498              	 .loc 3 53 0
 499 0004 034B     	 ldr r3,.L28
 500 0006 0122     	 movs r2,#1
 501 0008 1A70     	 strb r2,[r3]
  54:../main.c     **** }
 502              	 .loc 3 54 0
 503 000a BD46     	 mov sp,r7
 504              	.LCFI42:
 505              	 .cfi_def_cfa_register 13
 506              	 
 507 000c 5DF8047B 	 ldr r7,[sp],#4
 508              	.LCFI43:
 509              	 .cfi_restore 7
 510              	 .cfi_def_cfa_offset 0
 511 0010 7047     	 bx lr
 512              	.L29:
 513 0012 00BF     	 .align 2
 514              	.L28:
 515 0014 00000000 	 .word bI2cNack
 516              	 .cfi_endproc
 517              	.LFE334:
 519              	 .section .text.writeI2c,"ax",%progbits
 520              	 .align 2
 521              	 .global writeI2c
 522              	 .thumb
 523              	 .thumb_func
 525              	writeI2c:
 526              	.LFB335:
  55:../main.c     **** 
  56:../main.c     **** bool writeI2c(uint8_t address, uint8_t *data, uint8_t length) {
 527              	 .loc 3 56 0
 528              	 .cfi_startproc
 529              	 
 530              	 
 531 0000 80B5     	 push {r7,lr}
 532              	.LCFI44:
 533              	 .cfi_def_cfa_offset 8
 534              	 .cfi_offset 7,-8
 535              	 .cfi_offset 14,-4
 536 0002 84B0     	 sub sp,sp,#16
 537              	.LCFI45:
 538              	 .cfi_def_cfa_offset 24
 539 0004 02AF     	 add r7,sp,#8
 540              	.LCFI46:
 541              	 .cfi_def_cfa 7,16
 542 0006 0346     	 mov r3,r0
 543 0008 3960     	 str r1,[r7]
 544 000a FB71     	 strb r3,[r7,#7]
 545 000c 1346     	 mov r3,r2
 546 000e BB71     	 strb r3,[r7,#6]
  57:../main.c     **** 	enableCallbackI2cTimeout(true);
 547              	 .loc 3 57 0
 548 0010 0120     	 movs r0,#1
 549 0012 FFF7FEFF 	 bl enableCallbackI2cTimeout
  58:../main.c     **** 	bI2cNack = 0;
 550              	 .loc 3 58 0
 551 0016 1D4B     	 ldr r3,.L36
 552 0018 0022     	 movs r2,#0
 553 001a 1A70     	 strb r2,[r3]
  59:../main.c     **** 	bI2cTimeout = 0;
 554              	 .loc 3 59 0
 555 001c 1C4B     	 ldr r3,.L36+4
 556 001e 0022     	 movs r2,#0
 557 0020 1A70     	 strb r2,[r3]
  60:../main.c     **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, true, address, data, length, true);
 558              	 .loc 3 60 0
 559 0022 FA79     	 ldrb r2,[r7,#7]
 560 0024 BB79     	 ldrb r3,[r7,#6]
 561 0026 0093     	 str r3,[sp]
 562 0028 0123     	 movs r3,#1
 563 002a 0193     	 str r3,[sp,#4]
 564 002c 1948     	 ldr r0,.L36+8
 565 002e 0121     	 movs r1,#1
 566 0030 3B68     	 ldr r3,[r7]
 567 0032 FFF7FEFF 	 bl I2C_MASTER_Transmit
  61:../main.c     **** 	while((I2cTxCompletion == 0) && (bI2cTimeout == 0));
 568              	 .loc 3 61 0
 569 0036 00BF     	 nop
 570              	.L32:
 571              	 .loc 3 61 0 is_stmt 0 discriminator 2
 572 0038 174B     	 ldr r3,.L36+12
 573 003a 1B78     	 ldrb r3,[r3]
 574 003c DBB2     	 uxtb r3,r3
 575 003e 002B     	 cmp r3,#0
 576 0040 07D1     	 bne .L31
 577              	 .loc 3 61 0 discriminator 1
 578 0042 134B     	 ldr r3,.L36+4
 579 0044 1B78     	 ldrb r3,[r3]
 580 0046 DBB2     	 uxtb r3,r3
 581 0048 83F00103 	 eor r3,r3,#1
 582 004c DBB2     	 uxtb r3,r3
 583 004e 002B     	 cmp r3,#0
 584 0050 F2D1     	 bne .L32
 585              	.L31:
  62:../main.c     **** 	I2cTxCompletion = 0;
 586              	 .loc 3 62 0 is_stmt 1
 587 0052 114B     	 ldr r3,.L36+12
 588 0054 0022     	 movs r2,#0
 589 0056 1A70     	 strb r2,[r3]
  63:../main.c     **** 	enableCallbackI2cTimeout(false);
 590              	 .loc 3 63 0
 591 0058 0020     	 movs r0,#0
 592 005a FFF7FEFF 	 bl enableCallbackI2cTimeout
  64:../main.c     **** 	if(bI2cNack || bI2cTimeout) {
 593              	 .loc 3 64 0
 594 005e 0B4B     	 ldr r3,.L36
 595 0060 1B78     	 ldrb r3,[r3]
 596 0062 DBB2     	 uxtb r3,r3
 597 0064 002B     	 cmp r3,#0
 598 0066 04D1     	 bne .L33
 599              	 .loc 3 64 0 is_stmt 0 discriminator 1
 600 0068 094B     	 ldr r3,.L36+4
 601 006a 1B78     	 ldrb r3,[r3]
 602 006c DBB2     	 uxtb r3,r3
 603 006e 002B     	 cmp r3,#0
 604 0070 07D0     	 beq .L34
 605              	.L33:
  65:../main.c     **** 		bI2cNack = 0;
 606              	 .loc 3 65 0 is_stmt 1
 607 0072 064B     	 ldr r3,.L36
 608 0074 0022     	 movs r2,#0
 609 0076 1A70     	 strb r2,[r3]
  66:../main.c     **** 		bI2cTimeout = 0;
 610              	 .loc 3 66 0
 611 0078 054B     	 ldr r3,.L36+4
 612 007a 0022     	 movs r2,#0
 613 007c 1A70     	 strb r2,[r3]
  67:../main.c     **** 		return false;
 614              	 .loc 3 67 0
 615 007e 0023     	 movs r3,#0
 616 0080 00E0     	 b .L35
 617              	.L34:
  68:../main.c     **** 	}
  69:../main.c     **** 	else {
  70:../main.c     **** 		return true;
 618              	 .loc 3 70 0
 619 0082 0123     	 movs r3,#1
 620              	.L35:
  71:../main.c     **** 	}
  72:../main.c     **** }
 621              	 .loc 3 72 0
 622 0084 1846     	 mov r0,r3
 623 0086 0837     	 adds r7,r7,#8
 624              	.LCFI47:
 625              	 .cfi_def_cfa_offset 8
 626 0088 BD46     	 mov sp,r7
 627              	.LCFI48:
 628              	 .cfi_def_cfa_register 13
 629              	 
 630 008a 80BD     	 pop {r7,pc}
 631              	.L37:
 632              	 .align 2
 633              	.L36:
 634 008c 00000000 	 .word bI2cNack
 635 0090 00000000 	 .word bI2cTimeout
 636 0094 00000000 	 .word I2C_MASTER_0
 637 0098 00000000 	 .word I2cTxCompletion
 638              	 .cfi_endproc
 639              	.LFE335:
 641              	 .section .text.readI2c,"ax",%progbits
 642              	 .align 2
 643              	 .global readI2c
 644              	 .thumb
 645              	 .thumb_func
 647              	readI2c:
 648              	.LFB336:
  73:../main.c     **** 
  74:../main.c     **** bool readI2c(uint8_t address, uint8_t *data, uint8_t length) {
 649              	 .loc 3 74 0
 650              	 .cfi_startproc
 651              	 
 652              	 
 653 0000 80B5     	 push {r7,lr}
 654              	.LCFI49:
 655              	 .cfi_def_cfa_offset 8
 656              	 .cfi_offset 7,-8
 657              	 .cfi_offset 14,-4
 658 0002 86B0     	 sub sp,sp,#24
 659              	.LCFI50:
 660              	 .cfi_def_cfa_offset 32
 661 0004 04AF     	 add r7,sp,#16
 662              	.LCFI51:
 663              	 .cfi_def_cfa 7,16
 664 0006 0346     	 mov r3,r0
 665 0008 3960     	 str r1,[r7]
 666 000a FB71     	 strb r3,[r7,#7]
 667 000c 1346     	 mov r3,r2
 668 000e BB71     	 strb r3,[r7,#6]
  75:../main.c     **** 	enableCallbackI2cTimeout(true);
 669              	 .loc 3 75 0
 670 0010 0120     	 movs r0,#1
 671 0012 FFF7FEFF 	 bl enableCallbackI2cTimeout
  76:../main.c     **** 	bI2cNack = 0;
 672              	 .loc 3 76 0
 673 0016 1E4B     	 ldr r3,.L44
 674 0018 0022     	 movs r2,#0
 675 001a 1A70     	 strb r2,[r3]
  77:../main.c     **** 	bI2cTimeout = 0;
 676              	 .loc 3 77 0
 677 001c 1D4B     	 ldr r3,.L44+4
 678 001e 0022     	 movs r2,#0
 679 0020 1A70     	 strb r2,[r3]
  78:../main.c     **** 	I2C_MASTER_Receive(&I2C_MASTER_0, true, address, data, length, true, true);
 680              	 .loc 3 78 0
 681 0022 FA79     	 ldrb r2,[r7,#7]
 682 0024 BB79     	 ldrb r3,[r7,#6]
 683 0026 0093     	 str r3,[sp]
 684 0028 0123     	 movs r3,#1
 685 002a 0193     	 str r3,[sp,#4]
 686 002c 0123     	 movs r3,#1
 687 002e 0293     	 str r3,[sp,#8]
 688 0030 1948     	 ldr r0,.L44+8
 689 0032 0121     	 movs r1,#1
 690 0034 3B68     	 ldr r3,[r7]
 691 0036 FFF7FEFF 	 bl I2C_MASTER_Receive
  79:../main.c     **** 	while((I2cRxCompletion == 0) && (bI2cTimeout == 0));
 692              	 .loc 3 79 0
 693 003a 00BF     	 nop
 694              	.L40:
 695              	 .loc 3 79 0 is_stmt 0 discriminator 2
 696 003c 174B     	 ldr r3,.L44+12
 697 003e 1B78     	 ldrb r3,[r3]
 698 0040 DBB2     	 uxtb r3,r3
 699 0042 002B     	 cmp r3,#0
 700 0044 07D1     	 bne .L39
 701              	 .loc 3 79 0 discriminator 1
 702 0046 134B     	 ldr r3,.L44+4
 703 0048 1B78     	 ldrb r3,[r3]
 704 004a DBB2     	 uxtb r3,r3
 705 004c 83F00103 	 eor r3,r3,#1
 706 0050 DBB2     	 uxtb r3,r3
 707 0052 002B     	 cmp r3,#0
 708 0054 F2D1     	 bne .L40
 709              	.L39:
  80:../main.c     **** 	I2cRxCompletion = 0;
 710              	 .loc 3 80 0 is_stmt 1
 711 0056 114B     	 ldr r3,.L44+12
 712 0058 0022     	 movs r2,#0
 713 005a 1A70     	 strb r2,[r3]
  81:../main.c     **** 	enableCallbackI2cTimeout(false);
 714              	 .loc 3 81 0
 715 005c 0020     	 movs r0,#0
 716 005e FFF7FEFF 	 bl enableCallbackI2cTimeout
  82:../main.c     **** 	if(bI2cNack || bI2cTimeout) {
 717              	 .loc 3 82 0
 718 0062 0B4B     	 ldr r3,.L44
 719 0064 1B78     	 ldrb r3,[r3]
 720 0066 DBB2     	 uxtb r3,r3
 721 0068 002B     	 cmp r3,#0
 722 006a 04D1     	 bne .L41
 723              	 .loc 3 82 0 is_stmt 0 discriminator 1
 724 006c 094B     	 ldr r3,.L44+4
 725 006e 1B78     	 ldrb r3,[r3]
 726 0070 DBB2     	 uxtb r3,r3
 727 0072 002B     	 cmp r3,#0
 728 0074 07D0     	 beq .L42
 729              	.L41:
  83:../main.c     **** 		bI2cNack = 0;
 730              	 .loc 3 83 0 is_stmt 1
 731 0076 064B     	 ldr r3,.L44
 732 0078 0022     	 movs r2,#0
 733 007a 1A70     	 strb r2,[r3]
  84:../main.c     **** 		bI2cTimeout = 0;
 734              	 .loc 3 84 0
 735 007c 054B     	 ldr r3,.L44+4
 736 007e 0022     	 movs r2,#0
 737 0080 1A70     	 strb r2,[r3]
  85:../main.c     **** 		return false;
 738              	 .loc 3 85 0
 739 0082 0023     	 movs r3,#0
 740 0084 00E0     	 b .L43
 741              	.L42:
  86:../main.c     **** 	}
  87:../main.c     **** 	else {
  88:../main.c     **** 		return true;
 742              	 .loc 3 88 0
 743 0086 0123     	 movs r3,#1
 744              	.L43:
  89:../main.c     **** 	}
  90:../main.c     **** }
 745              	 .loc 3 90 0
 746 0088 1846     	 mov r0,r3
 747 008a 0837     	 adds r7,r7,#8
 748              	.LCFI52:
 749              	 .cfi_def_cfa_offset 8
 750 008c BD46     	 mov sp,r7
 751              	.LCFI53:
 752              	 .cfi_def_cfa_register 13
 753              	 
 754 008e 80BD     	 pop {r7,pc}
 755              	.L45:
 756              	 .align 2
 757              	.L44:
 758 0090 00000000 	 .word bI2cNack
 759 0094 00000000 	 .word bI2cTimeout
 760 0098 00000000 	 .word I2C_MASTER_0
 761 009c 00000000 	 .word I2cRxCompletion
 762              	 .cfi_endproc
 763              	.LFE336:
 765              	 .section .text.main,"ax",%progbits
 766              	 .align 2
 767              	 .global main
 768              	 .thumb
 769              	 .thumb_func
 771              	main:
 772              	.LFB337:
  91:../main.c     **** 
  92:../main.c     **** int main(void)
  93:../main.c     **** {
 773              	 .loc 3 93 0
 774              	 .cfi_startproc
 775              	 
 776              	 
 777 0000 80B5     	 push {r7,lr}
 778              	.LCFI54:
 779              	 .cfi_def_cfa_offset 8
 780              	 .cfi_offset 7,-8
 781              	 .cfi_offset 14,-4
 782 0002 82B0     	 sub sp,sp,#8
 783              	.LCFI55:
 784              	 .cfi_def_cfa_offset 16
 785 0004 00AF     	 add r7,sp,#0
 786              	.LCFI56:
 787              	 .cfi_def_cfa_register 7
  94:../main.c     ****   DAVE_STATUS_t status;
  95:../main.c     **** 
  96:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 788              	 .loc 3 96 0
 789 0006 FFF7FEFF 	 bl DAVE_Init
 790 000a 0346     	 mov r3,r0
 791 000c FB71     	 strb r3,[r7,#7]
  97:../main.c     **** 
  98:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 792              	 .loc 3 98 0
 793 000e FB79     	 ldrb r3,[r7,#7]
 794 0010 002B     	 cmp r3,#0
 795 0012 00D0     	 beq .L47
 796              	.L48:
  99:../main.c     ****   {
 100:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 101:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 102:../main.c     **** 
 103:../main.c     ****     while(1U)
 104:../main.c     ****     {
 105:../main.c     **** 
 106:../main.c     ****     }
 797              	 .loc 3 106 0 discriminator 1
 798 0014 FEE7     	 b .L48
 799              	.L47:
 107:../main.c     ****   }
 108:../main.c     **** 
 109:../main.c     ****   timerI2c = SYSTIMER_CreateTimer(10000, SYSTIMER_MODE_PERIODIC, callbackI2cTimeout, NULL);
 800              	 .loc 3 109 0
 801 0016 42F21070 	 movw r0,#10000
 802 001a 0121     	 movs r1,#1
 803 001c 034A     	 ldr r2,.L50
 804 001e 0023     	 movs r3,#0
 805 0020 FFF7FEFF 	 bl SYSTIMER_CreateTimer
 806 0024 0246     	 mov r2,r0
 807 0026 024B     	 ldr r3,.L50+4
 808 0028 1A60     	 str r2,[r3]
 809              	.L49:
 110:../main.c     **** 
 111:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 112:../main.c     ****   while(1U)
 113:../main.c     ****   {
 114:../main.c     **** 
 115:../main.c     ****   }
 810              	 .loc 3 115 0 discriminator 2
 811 002a FEE7     	 b .L49
 812              	.L51:
 813              	 .align 2
 814              	.L50:
 815 002c 00000000 	 .word callbackI2cTimeout
 816 0030 00000000 	 .word timerI2c
 817              	 .cfi_endproc
 818              	.LFE337:
 820              	 .text
 821              	.Letext0:
 822              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 823              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 824              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 825              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc/xmc_gpio.h"
 826              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc/xmc4_gpio.h"
 827              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc/xmc_usic.h"
 828              	 .file 10 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/SYSTIMER/systimer.h"
 829              	 .file 11 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/XMCLib/inc/xmc_uart.h"
 830              	 .file 12 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/UART/uart.h"
 831              	 .file 13 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/DAVE.h"
 832              	 .file 14 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/CMSIS/Include/cmsis_gcc.h"
 833              	 .file 15 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/CMSIS/Include/core_cm4.h"
 834              	 .file 16 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 835              	 .file 17 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/I2C_MASTER/i2c_master_extern.h"
 836              	 .file 18 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/I2C/Dave/Generated/UART/uart_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_I2C_CH_ClearStatusFlag:00000000 $t
    {standard input}:24     .text.XMC_I2C_CH_ClearStatusFlag:00000000 XMC_I2C_CH_ClearStatusFlag
    {standard input}:68     .text.I2C_MASTER_SendStop:00000000 $t
    {standard input}:72     .text.I2C_MASTER_SendStop:00000000 I2C_MASTER_SendStop
    {standard input}:115    .text._write:00000000 $t
    {standard input}:120    .text._write:00000000 _write
    {standard input}:165    .text._write:00000028 $d
    {standard input}:174    .bss.timerI2c:00000000 timerI2c
    {standard input}:171    .bss.timerI2c:00000000 $d
    {standard input}:180    .bss.I2cTxCompletion:00000000 I2cTxCompletion
    {standard input}:181    .bss.I2cTxCompletion:00000000 $d
    {standard input}:186    .bss.I2cRxCompletion:00000000 I2cRxCompletion
    {standard input}:187    .bss.I2cRxCompletion:00000000 $d
    {standard input}:192    .bss.bI2cNack:00000000 bI2cNack
    {standard input}:193    .bss.bI2cNack:00000000 $d
    {standard input}:198    .bss.bI2cTimeout:00000000 bI2cTimeout
    {standard input}:199    .bss.bI2cTimeout:00000000 $d
    {standard input}:201    .text.callbackI2cTimeout:00000000 $t
    {standard input}:206    .text.callbackI2cTimeout:00000000 callbackI2cTimeout
    {standard input}:249    .text.callbackI2cTimeout:00000028 $d
    {standard input}:255    .text.enableCallbackI2cTimeout:00000000 $t
    {standard input}:260    .text.enableCallbackI2cTimeout:00000000 enableCallbackI2cTimeout
    {standard input}:308    .text.enableCallbackI2cTimeout:0000002c $d
    {standard input}:313    .text.callbackI2cTx:00000000 $t
    {standard input}:318    .text.callbackI2cTx:00000000 callbackI2cTx
    {standard input}:349    .text.callbackI2cTx:00000014 $d
    {standard input}:354    .text.callbackI2cRx:00000000 $t
    {standard input}:359    .text.callbackI2cRx:00000000 callbackI2cRx
    {standard input}:390    .text.callbackI2cRx:00000014 $d
    {standard input}:395    .text.I2C_NACK_IRQ_Handler:00000000 $t
    {standard input}:400    .text.I2C_NACK_IRQ_Handler:00000000 I2C_NACK_IRQ_Handler
    {standard input}:432    .text.I2C_NACK_IRQ_Handler:00000020 $d
    {standard input}:438    .text.I2C_ARB_Lost_IRQ_Handler:00000000 $t
    {standard input}:443    .text.I2C_ARB_Lost_IRQ_Handler:00000000 I2C_ARB_Lost_IRQ_Handler
    {standard input}:474    .text.I2C_ARB_Lost_IRQ_Handler:00000014 $d
    {standard input}:479    .text.I2C_ERR_IRQ_Handler:00000000 $t
    {standard input}:484    .text.I2C_ERR_IRQ_Handler:00000000 I2C_ERR_IRQ_Handler
    {standard input}:515    .text.I2C_ERR_IRQ_Handler:00000014 $d
    {standard input}:520    .text.writeI2c:00000000 $t
    {standard input}:525    .text.writeI2c:00000000 writeI2c
    {standard input}:634    .text.writeI2c:0000008c $d
    {standard input}:642    .text.readI2c:00000000 $t
    {standard input}:647    .text.readI2c:00000000 readI2c
    {standard input}:758    .text.readI2c:00000090 $d
    {standard input}:766    .text.main:00000000 $t
    {standard input}:771    .text.main:00000000 main
    {standard input}:815    .text.main:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_I2C_CH_MasterStop
UART_Transmit
UART_0
I2C_MASTER_AbortTransmit
I2C_MASTER_AbortReceive
I2C_MASTER_Init
I2C_MASTER_0
SYSTIMER_StartTimer
SYSTIMER_StopTimer
I2C_MASTER_Transmit
I2C_MASTER_Receive
DAVE_Init
SYSTIMER_CreateTimer
